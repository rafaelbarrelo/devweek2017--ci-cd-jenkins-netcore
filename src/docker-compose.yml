version: '3.4'

services:
  devweek_webapp:
    image: devweek_webapp
    build:
      context: .
      dockerfile: DevWeek.WebApp/Dockerfile
    restart: unless-stopped
    networks: 
      - devweek_net
    depends_on: 
      - rabbitmq
      - s3
      - redis
      - mongodb      

  devweek_worker:
    image: devweek_worker
    build:
      context: .
      dockerfile: DevWeek.Worker/Dockerfile
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - shared_data:/shared
    networks: 
      - devweek_net
    depends_on: 
      - rabbitmq
      - s3
      - redis
      - mongodb

  rabbitmq:
    image: rabbitmq:3-management-alpine
    volumes:
      - mq_data:/var/lib/rabbitmq/mnesia
    environment:
      RABBITMQ_DEFAULT_USER: devweek
      RABBITMQ_DEFAULT_PASS: UCpkGkG37xgDzNvG6rbkGDuVeyNc4vlcVtDorn3wPFhR9URvhDN6cSeOzL4HXN3u4Z3Ahv
      RABBITMQ_DEFAULT_VHOST: platform
    networks: 
      - devweek_net

  s3:
    image: minio/minio    
    volumes:
      - s3_data:/data
      - s3_config:/root/.minio
    command: server /data
    environment:
      MINIO_ACCESS_KEY: Zu8VgBoZMU2xcmOEeS70
      MINIO_SECRET_KEY: xvnjYyFQyFs44iuUagi4kTHiOGvlK1PiX64LiwOy
    networks: 
      - devweek_net

  redis:
    image: redis:alpine
    networks: 
      - devweek_net

  mongodb:
    image: mongo:3.4
    volumes:
      - mongo_data:/data/db
    restart: always
    command: --storageEngine wiredTiger
    environment: 
      MONGO_INITDB_ROOT_USERNAME: mongouser
      MONGO_INITDB_ROOT_PASSWORD: eprPs2UEJ239RvH7SicPkcFbkTQoa8
    networks: 
      - devweek_net


volumes:  
  mq_data:
  s3_data:
  s3_config:
  shared_data:
  mongo_data:


networks:
  devweek_net: